# HTTP 서버 - HTTPS로 리다이렉트
server {
    listen 80;
    server_name tstube.shop www.tstube.shop;
    
    # HTTP를 HTTPS로 리다이렉트
    location / {
        return 301 https://$host$request_uri;
    }
    
    # Let's Encrypt 인증서 갱신을 위한 경로
    location /.well-known/acme-challenge/ {
        root /var/www/html;
    }
}

# HTTPS 서버
server {
    listen 443 ssl;
    server_name tstube.shop www.tstube.shop;

    # SSL 인증서 설정
    ssl_certificate /etc/letsencrypt/live/tstube.shop/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/tstube.shop/privkey.pem;
    
    # SSL 보안 설정
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # OAuth2 인증 관련 경로 추가
    location /auth/ {
        proxy_pass http://spring-container:8080/auth/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Cookie $http_cookie;  # 쿠키 전달 설정
        proxy_cookie_path / /;
    }

    location /login/ {
        proxy_pass http://spring-container:8080/login/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Cookie $http_cookie;  # 쿠키 전달 설정
        proxy_cookie_path / /;
    }

    location /api/upload {
        client_max_body_size 1G;
        proxy_pass http://spring-container:8080/upload/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Cookie $http_cookie;  # 쿠키 전달 설정
    }
  
    location /api/ {
        client_max_body_size 50M;
        proxy_pass http://spring-container:8080/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Cookie $http_cookie;  # 쿠키 전달 설정
    }

    location / {
        root /usr/share/nginx/html;
        index index.html;
        try_files $uri /index.html;
    }
        
    location /ws/ {
        proxy_pass http://spring-container:8080/ws/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Cookie $http_cookie;  # 쿠키 전달 설정
    }
}